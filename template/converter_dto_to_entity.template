{% import 'template/utils.template' as utils %}
{% set template_name = self | template_name %}
{% set entity_name_pascalcase = entity.name | to_pascalcase %}
{% set entity_name = entity.name | to_lowercase %}
{% set class_name = entity_name_pascalcase ~ 'Dto' %}
package {{ packagePath }}.converter;

import org.springframework.stereotype.Component;
import org.springframework.core.convert.converter.Converter;

import {{ packagePath }}.bom.*;
import {{ packagePath }}.dto.{{ entity_name_pascalcase}}Dto;

import java.util.*;

import static java.util.Objects.nonNull;
import static java.util.stream.Collectors.toList;

@Component
public class {{ entity_name_pascalcase }}DtoTo{{ entity_name_pascalcase }}Converter implements Converter<{{ entity_name_pascalcase }}Dto,{{ entity_name_pascalcase }}> {

    @Override
    public {{ entity_name_pascalcase }} convert({{ entity_name_pascalcase }}Dto {{entity_name}}Dto) {
		{{ entity_name_pascalcase }} {{ entity_name }} = new {{ entity_name_pascalcase }}();
        {% for property in entity.properties %}
        {% if property.type.is_user_type %}

        {% if property.list %}
        if(nonNull({{entity_name}}Dto.get{{property.name | to_pascalcase}}())) {
            List<{{property.type.name}}> _{{property.name}} = {{entity_name}}Dto.get{{property.name | to_pascalcase}}().stream()
                    .map(_dto -> {
                        {{property.type.name}} __{{property.name}} = new {{property.type.name}}();
                        __{{property.name}}.setId(_dto.getId());
                        return __{{property.name}};
                    })
                    .collect(toList());
            {{ entity_name }}.set{{property.name | to_pascalcase}}(_{{property.name}});
        }
        {% else %}
        {{property.type}} _{{property.name}} = new {{ property.type.name }}();
        _{{ property.name }}.setId({{entity_name}}Dto.get{{ property.name | to_pascalcase}}().getId());
        {{ entity_name }}.set{{ property.name | to_pascalcase}}(_{{ property.name }});
        {% endif %}
        {% else %}
        {{ entity_name }}.set{{ property.name | to_pascalcase}}({{entity_name}}Dto.get{{property.name | to_pascalcase }}());
        {% endif %}
        {% endfor %}
        return {{ entity_name }};
    }
}